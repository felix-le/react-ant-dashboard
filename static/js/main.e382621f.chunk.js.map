{"version":3,"sources":["Views/Dashboard/index.js","Views/Dashboard/Dashboard.js","Views/Pages/Profile/index.js","Views/Pages/Profile/Profile.js","Views/Pages/ResetPass/index.js","Views/Pages/ResetPass/ResetPass.js","Views/Pages/Infor/index.js","Views/Pages/Infor/Infor.js","Views/Pages/DetailUser/index.js","Views/Pages/DetailUser/DetailUser.js","Views/Pages/Settings/index.js","Views/Pages/Settings/Settings.js","configs/url.js","server/api.js","Views/Pages/Users/Users.js","Views/Pages/Users/redux/actions.js","Views/Pages/Users/redux/types.js","routes.js","Views/Pages/Users/index.js","Views/Pages/ChangePass/ChangePass.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/DefaultFooter.js","containers/DefaultLayout/DefaultSideBar.js","containers/DefaultLayout/DefaultLayout.js","containers/DefaultLayout/index.js","Views/Pages/Login/Login.js","redux/actions.js","redux/types.js","Views/Pages/Login/index.js","Views/Pages/ForgetPass/index.js","Views/Pages/ForgetPass/ForgetPass.js","Views/Pages/Register/Register.js","Views/Pages/Register/index.js","App.js","serviceWorker.js","redux/reducers.js","Views/Pages/Users/redux/reducers.js","stores.js","index.js"],"names":["Dashboard","Profile","ResetPass","Infor","DetailUser","connect","state","user","userReducers","useState","dataUser","setDataUser","useEffect","userpass","console","log","Description","title","layout","bordered","Item","label","style","cell","email","gender","login","username","span","location","country","city","street","number","name","dob","age","date","registered","id","value","DetailAvatar","className","size","src","picture","large","first","last","Object","keys","length","offset","Settings","url","DASHBOARD","INFO","FOOD","SETTINGS","USERS","USERS_DETAIL","PROFILE","CHANGE_PASSWORD","apiFetchUsers","a","data","getLocalUsers","readDataLocalStorage","JSON","parse","window","localStorage","getItem","localUsers","appReducers","users","confirm","Modal","mapDispatchToProps","detailUser","type","payload","fetchUsers","dispatch","api","res","results","removeUser","removeAll","loading","error","initUsersRedux","visibleUsersRedux","setSelectedRowKeys","setSelectedRows","records","setRecords","history","useHistory","rowSelection","onChange","selectedRowKeys","selectedRows","onSelect","record","selected","newEmails","push","onSelectAll","changeRows","handleDelete","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","handleViewDetail","URL_PAGE","columns","dataIndex","render","thumbnail","alt","width","fixed","key","marginRight","onClick","danger","marginBottom","dataSource","rowKey","uuid","scroll","x","y","pagination","pageSize","routes","path","exact","component","Users","Information","authority","RESETPASSWORD","ResetPassword","Header","Layout","DefaultHeader","_handleLogOut","menu","to","Divider","padding","textAlign","overlay","trigger","right","DefaultFooter","Sider","SubMenu","Menu","DefaultSideBar","setState","collapsible","collapsed","onCollapse","color","theme","defaultSelectedKeys","mode","PieChartOutlined","UserOutlined","TeamOutlined","FileOutlined","Content","Footer","DefaultLayout","hash","string","node","breadcumbLabel","split","charAt","toUpperCase","slice","minHeight","margin","map","route","idx","from","labelCol","wrapperCol","tailLayout","fetchLocalUsers","checkUserInput","values","Login","matchData","initialValues","remember","onFinish","onFinishFailed","errorInfo","rules","required","message","Password","valuePropName","htmlType","ForgetPass","Option","Select","formItemLayout","xs","sm","tailFormItemLayout","setUser","password","phone","prefix","website","uuidv4","Register","Form","useForm","form","prefixSelector","noStyle","autoCompleteResult","setAutoCompleteResult","websiteOptions","nickname","webiste","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","QuestionCircleOutlined","whitespace","addonBefore","options","domain","placeholder","_","App","Suspense","fallback","ForgotPassword","Boolean","hostname","match","initialState","keywords","reducers","action","Userreducers","newUsers","filter","persisConfig","storage","allReducers","combineReducers","persistedReducer","persistReducer","stores","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e382621f.chunk.js","sourcesContent":["import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import React from \"react\";\n// import Users from \"../Pages/Users\";\nconst Dashboard = () => {\n  return (\n    <div>\n      <h1>this is dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import Profile from \"./Profile\";\nexport default Profile;\n","import React from \"react\";\n\nconst Profile = () => {\n  return <div>this is profile page</div>;\n};\n\nexport default Profile;\n","import ResetPass from \"./ResetPass\";\n\nexport default ResetPass;\n","import React from \"react\";\n\nconst ResetPass = () => {\n  return <div>Reset Pass</div>;\n};\n\nexport default ResetPass;\n","import Infor from \"./Infor\";\nexport default Infor;\n","import React from \"react\";\n\nconst Infor = () => {\n  return <div>Information page tai saooo???</div>;\n};\n\nexport default Infor;\n","import DetailUser from'./DetailUser'\n\nexport default DetailUser;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Descriptions, Row, Col, Card, Avatar } from \"antd\";\n\nconst DetailUser = ({ user }) => {\n  const [dataUser, setDataUser] = useState({});\n\n  useEffect(() => {\n    setDataUser(user.userpass);\n  }, [user.userpass]);\n  console.log(dataUser);\n  const Description = () => {\n    return (\n      <>\n        <Descriptions title=\"User Info\" layout=\"vertical\" bordered>\n          <Descriptions.Item label=\"Contact\" style={{}}>\n            {dataUser.cell}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Email\">{dataUser.email}</Descriptions.Item>\n          <Descriptions.Item label=\"Gender\">\n            {dataUser.gender}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"User name\">\n            {dataUser.login.username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Location\" span={2}>\n            {dataUser.location.country}, {dataUser.location.city},{\" \"}\n            {dataUser.location.street.number}, {dataUser.location.street.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Age\">\n            {dataUser.dob.age}, {dataUser.dob.date}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Registered Date\" span={2}>\n            {dataUser.registered.date}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"ID\">\n            {dataUser.id.name || \"hidden\"} {dataUser.id.value || \"\"}\n          </Descriptions.Item>\n        </Descriptions>\n      </>\n    );\n  };\n\n  const DetailAvatar = () => {\n    return (\n      <>\n        <Card>\n          <div className=\"profile__avatar\">\n            <Avatar size={130} src={dataUser.picture.large} />\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__info__regency\">{dataUser.name.title}</div>\n            <div className=\"profile__info__name\">\n              {dataUser.name.first}. {dataUser.name.last}\n            </div>\n            <div className=\"profile__info__bio\">\n              We don&lsquo;t be scared of the truth because we need to restart\n              the human foundation in truth And I love you like Kanye loves\n              Kanye I love Rick Owens’ bed design.\n            </div>\n          </div>\n        </Card>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"detaul_userdetaul_user\">\n      {Object.keys(dataUser).length > 0 ? (\n        <>\n          <Row>\n            <Col span={12} offset={6} className=\"ant-col-profile\">\n              <DetailAvatar />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12} offset={6}>\n              <Description />\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <div>loading</div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user } = state.userReducers;\n\n  return {\n    user,\n  };\n};\n\nexport default connect(mapStateToProps, null)(DetailUser);\n","import Settings from './Settings'\nexport default Settings;","import React from 'react';\n\nconst Settings = () => {\n  return (\n    <div>\n      this is Setting page\n    </div>\n  );\n}\n\nexport default Settings;\n","const url = {\n  DASHBOARD: \"/dashboard\",\n  INFO: \"/information\",\n  FOOD: \"/food\",\n  SETTINGS: \"/settings\",\n  USERS: \"/users\",\n  USERS_DETAIL: \"/user-detail\",\n  PROFILE: \"/profile\",\n  CHANGE_PASSWORD: \"/change-password\",\n};\n\nexport default url;\n","import data from \"../db.json\";\n\nexport const apiFetchUsers = async () => {\n  // return axios.get(\"http://localhost:4000/results\");\n  return data;\n};\n\nexport const getLocalUsers = async () => {\n  const readDataLocalStorage = JSON.parse(\n    window.localStorage.getItem(\"persist:root\")\n  );\n  if (Object.keys(readDataLocalStorage).length > 0) {\n    const localUsers = JSON.parse(readDataLocalStorage.appReducers).users\n      ? JSON.parse(readDataLocalStorage.appReducers).users\n      : {};\n    return localUsers;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table, Button, Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport URL_PAGE from \"../../../configs/url\";\nimport { connect } from \"react-redux\";\nimport { detailUser, fetchUsers, removeUser, removeAll } from \"./redux/actions\";\nconst { confirm } = Modal;\n\nconst Users = ({\n  detailUser,\n  visibleUsersRedux,\n  fetchUsers,\n  removeUser,\n  removeAll,\n}) => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState(\"\");\n  const [selectedRows, setSelectedRows] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  let history = useHistory();\n  // rowSelection objects indicates the need for row selection\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRowKeys(selectedRowKeys);\n      setSelectedRows(selectedRows);\n    },\n    onSelect: (record, selected, selectedRows) => {\n      const newEmails = [];\n      for (const value of selectedRows) {\n        newEmails.push(value.email);\n      }\n      setRecords(newEmails);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      const newEmails = [];\n      for (const value of selectedRows) {\n        newEmails.push(value.email);\n      }\n      setRecords(newEmails);\n    },\n  };\n\n  const _handleDeleteAll = () => {\n    confirm({\n      title: \"Are you sure delete All tasks?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Some descriptions\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        removeAll(records);\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  const handleDelete = (record) => () => {\n    confirm({\n      title: \"Are you sure delete the task?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Some descriptions\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        removeUser(record);\n        console.log(\"deleted\");\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const handleViewDetail = (record) => () => {\n    detailUser(record);\n    history.push(URL_PAGE.USERS_DETAIL);\n  };\n\n  const columns = [\n    {\n      title: \"Avatar\",\n      dataIndex: \"picture\",\n      render: (picture) => (\n        <img src={picture.thumbnail} title=\"Avatar\" alt=\"Avatar\" />\n      ),\n      width: \"5%\",\n      fixed: \"left\",\n    },\n    {\n      title: \"Full Name\",\n      width: \"15%\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (name) => `${name.title}. ${name.first} ${name.last}`,\n      fixed: \"left\",\n    },\n    {\n      title: \"Email\",\n      width: \"15%\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"gender\",\n      dataIndex: \"gender\",\n      key: \"1\",\n      width: \"10\",\n    },\n\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      render: (record) => {\n        return (\n          <div className=\"table__action\">\n            <Button\n              type=\"primary\"\n              className=\"btn-success\"\n              style={{ marginRight: 16 }}\n              onClick={handleViewDetail(record)}\n            >\n              View\n            </Button>\n            <Button type=\"primary\" danger onClick={handleDelete(record)}>\n              Delete\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        danger\n        onClick={() => {\n          _handleDeleteAll();\n        }}\n        style={{ marginBottom: 16 }}\n      >\n        Delete Seleted Item\n      </Button>\n      <Table\n        columns={columns}\n        dataSource={visibleUsersRedux}\n        rowKey={(record) => record.login.uuid}\n        scroll={{ x: 1500, y: 300 }}\n        pagination={{ pageSize: 5 }}\n        rowSelection={rowSelection}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    userReducers: {\n      user,\n      loading,\n      error,\n      data,\n      initUsersRedux,\n      visibleUsersRedux,\n    },\n  } = state;\n  return {\n    user,\n    loading,\n    error,\n    data,\n    initUsersRedux,\n    visibleUsersRedux,\n  };\n};\n\nconst mapDispatchToProps = {\n  detailUser,\n  fetchUsers,\n  removeUser,\n  removeAll,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","import {\n  REMOVE_USER,\n  FETCH_USER_START,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  // SEARCH_USER,\n  USER_DETAIL,\n  REMOVE_ALL,\n} from \"./types\";\nimport * as api from \"../../../../server/api\";\n\nexport const fetchUsers = () => async (dispatch) => {\n  dispatch({\n    type: FETCH_USER_START,\n  });\n  try {\n    const res = await api.apiFetchUsers();\n\n    const data = res.results;\n    dispatch({\n      type: FETCH_USER_SUCCESS,\n      payload: { data },\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_USER_ERROR,\n    });\n  }\n};\n\nexport const detailUser = (userpass) => ({\n  type: USER_DETAIL,\n  payload: {\n    userpass,\n  },\n});\n\nexport const removeUser = (user) => ({\n  type: REMOVE_USER,\n  payload: {\n    user,\n  },\n});\n\nexport const removeAll = (users) => ({\n  type: REMOVE_ALL,\n  payload: {\n    users,\n  },\n});\n","export const REMOVE_USER = \"USER/REMOVE_USER\";\n\n// pass obj from users to user detail\n\nexport const USER_DETAIL = \"USER/USER_DETAIL\";\n\n// Fetch User from Api\nexport const FETCH_USER_START = \"USER/FETCH_USER_START\";\nexport const FETCH_USER_SUCCESS = \"USER/FETCH_USER_SUCCESS\";\nexport const FETCH_USER_ERROR = \"USER/FETCH_USER_ERROR\";\n\n// Search Users from Api\nexport const SEARCH_USER = \"SEARCH_USER\";\n\nexport const REMOVE_ALL = \"USER/REMOVE_ALL\";","import Dashboard from \"./Views/Dashboard\";\nimport Profile from \"./Views/Pages/Profile\";\nimport ResetPassword from \"./Views/Pages/ResetPass\";\nimport Information from \"./Views/Pages/Infor\";\nimport DetailUser from \"./Views/Pages/DetailUser\";\nimport Settings from \"./Views/Pages/Settings\";\nimport Users from \"./Views/Pages/Users\";\nimport ChangePass from \"./Views/Pages/ChangePass\";\n\n// configs\nimport { URL_PAGE } from \"./configs\";\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Dashboard\", component: Dashboard },\n  {\n    path: URL_PAGE.DASHBOARD,\n    name: \"Dashboard\",\n    component: Dashboard,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.USERS,\n    name: \"User List\",\n    component: Users,\n  },\n  {\n    path: URL_PAGE.CHANGE_PASSWORD,\n    name: \"Change Password\",\n    component: ChangePass,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.INFO,\n    name: \"About Project\",\n    component: Information,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.SETTINGS,\n    name: \"Settings\",\n    component: Settings,\n    exact: true,\n  },\n\n  {\n    path: URL_PAGE.PROFILE,\n    name: \"profile\",\n    component: Profile,\n    exact: true,\n    authority: [\"users\"],\n  },\n  {\n    path: URL_PAGE.USERS_DETAIL,\n    name: \"Detail User\",\n    component: DetailUser,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.RESETPASSWORD,\n    name: \"Reset Your Password\",\n    component: ResetPassword,\n    exact: true,\n  },\n];\nexport default routes;\n","import Users from \"./Users\"\nexport default Users;","import React from \"react\";\n\nconst ChangePass = () => {\n  return <div>this is Change Pass Page</div>;\n};\n\nexport default ChangePass;\n","import React from \"react\";\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { URL_PAGE } from \"../../configs\";\nconst { Header } = Layout;\n\nconst DefaultHeader = () => {\n  const _handleLogOut = () => {};\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"1\">\n        <Link to={URL_PAGE.PROFILE}>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to={URL_PAGE.CHANGE_PASSWORD}>Change Password</Link>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"3\">\n        <Link to={\"/login\"} onClick={() => _handleLogOut}>\n          Logout\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n      <div\n        className=\"avatar-wrapper\"\n        style={{ padding: 0, textAlign: \"right\" }}\n      >\n        <Dropdown overlay={menu} trigger={[\"click\"]}>\n          <Avatar\n            size=\"large\"\n            src=\"https://bit.ly/34SWeiX\"\n            style={{ right: \"20px\" }}\n          />\n        </Dropdown>\n      </div>\n    </Header>\n  );\n};\n\nexport default DefaultHeader;\n","import React from \"react\";\n\nconst DefaultFooter = () => {\n  return <> Ant Design ©2018 Created by Ant UED</>;\n};\n\nexport default DefaultFooter;\n","import React, { useState } from \"react\";\nimport {\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { URL_PAGE } from \"../../configs\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\nconst DefaultSideBar = () => {\n  const [state, setState] = useState(false);\n\n  const onCollapse = (collapsed) => {\n    console.log(collapsed);\n    setState({ collapsed });\n  };\n\n  return (\n    <Sider collapsible collapsed={state.collapsed} onCollapse={onCollapse}>\n      <div className=\"logo\" style={{ color: \"white\", textAlign: \"center\" }}>\n        Viet Anh le\n      </div>\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <Menu.Item key=\"1\">\n          <Link to={URL_PAGE.DASHBOARD}>\n            <PieChartOutlined />\n            <span>Dashboard</span>\n          </Link>\n        </Menu.Item>\n\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <UserOutlined />\n              <span>Management</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"3\">\n            <Link to={URL_PAGE.USERS}>\n              <span>User List</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <TeamOutlined />\n              <span>Team</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"6\">Team 1</Menu.Item>\n          <Menu.Item key=\"8\">Team 2</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"9\">\n          <FileOutlined />\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n};\n\nexport default DefaultSideBar;\n","import React, { Suspense } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Breadcrumb } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport last from \"lodash/last\";\nimport DefaultHeader from \"./DefaultHeader\";\nimport DefaultFooter from \"./DefaultFooter\";\nimport DefaultSideBar from \"./DefaultSideBar\";\n\nconst { Content, Footer } = Layout;\n\nconst DefaultLayout = () => {\n  const location = window.location.hash;\n\n  const getNodeLabel = (node) => last(node.split(\"/\"));\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  const breadcumbLabel = capitalizeFirstLetter(getNodeLabel(location));\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <DefaultSideBar />\n      <Layout className=\"site-layout\">\n        <Suspense>\n          <DefaultHeader />\n        </Suspense>\n        <Suspense>\n          <Content style={{ margin: \"0 16px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>{breadcumbLabel}</Breadcrumb.Item>\n              <Breadcrumb.Item>Child-Page</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"container\">\n              <Switch>\n                {routes.map((route, idx) => {\n                  return route.name === \"profile\" ? (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      component={route.component}\n                    />\n                  ) : (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      component={route.component}\n                    />\n                  );\n                })}\n                <Redirect from=\"/\" to=\"/dashboard\" />\n              </Switch>\n            </div>\n          </Content>\n        </Suspense>\n        <Suspense>\n          <Footer style={{ textAlign: \"center\" }}>\n            <DefaultFooter />\n          </Footer>\n        </Suspense>\n      </Layout>\n    </Layout>\n  );\n};\n\n// ReactDOM.render(<SiderDemo />, mountNode);\n\nexport default DefaultLayout;\n","import DefaultLayout from \"./DefaultLayout\";\nexport default DefaultLayout;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { fetchLocalUsers, checkUserInput } from \"../../../redux/actions\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Login = ({ fetchLocalUsers, checkUserInput, matchData, user, error }) => {\n  let history = useHistory();\n  //NEED TO HELP\n  const onFinish = (values) => {\n    checkUserInput(values);\n  };\n  //end NEED TO HELP\n\n  useEffect(() => {\n    fetchLocalUsers();\n  }, []);\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout className=\"login-page-wrapper\">\n      <Form\n        className=\"login-form\"\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item {...tailLayout}>\n          <p>1</p>\n          <p>1</p>\n        </Form.Item>\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n        {/* {errors.email && <p className=\"error\">{errors.email}</p>} */}\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Link\n            to=\"/register-page\"\n            type=\"primary\"\n            className=\"ant-btn ant-btn-primary\"\n          >\n            Register Now !\n          </Link>\n        </Form.Item>\n      </Form>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    appReducers: { users, matchData, user, error },\n  } = state;\n  return {\n    users,\n    matchData,\n    user,\n    error,\n  };\n};\nconst mapDispatchToProps = {\n  fetchLocalUsers,\n  checkUserInput,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n// export default Login;\n","import { v4 as uuidv4 } from \"uuid\";\nimport * as api from \"../server/api\";\nimport {\n  SET_USER,\n  CHECK_USER,\n  FETCH_LOCAL_USER_START,\n  FETCH_LOCAL_USER_SUCCESS,\n  FETCH_LOCAL_USER_ERROR,\n} from \"./types\";\n// ----------------------------------------------------------------\nexport const setUser = (email, username, password, phone, prefix, website) => ({\n  type: SET_USER,\n  payload: {\n    id: uuidv4(),\n    email,\n    username,\n    password,\n    phone,\n    prefix,\n    website,\n  },\n});\n// ----------------------------------------------------------------\nexport const fetchLocalUsers = () => async (dispatch) => {\n  dispatch({\n    type: FETCH_LOCAL_USER_START,\n  });\n  try {\n    const res = await api.getLocalUsers();\n    dispatch({\n      type: FETCH_LOCAL_USER_SUCCESS,\n      payload: { res },\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_LOCAL_USER_ERROR,\n    });\n  }\n};\n// ----------------------------------------------------------------\nexport const checkUserInput = (values) => ({\n  type: CHECK_USER,\n  payload: {\n    values,\n  },\n});\n","export const SET_USER = \"APP/SET_USER\"; //save user when login to local store by redux persist\n\nexport const CHECK_USER = \"APP/CHECK_USER\";\n\nexport const FETCH_LOCAL_USER_START = \"APP/FETCH_LOCAL_USER_START\";\nexport const FETCH_LOCAL_USER_SUCCESS = \"APP/FETCH_LOCAL_USER_SUCCESS\";\nexport const FETCH_LOCAL_USER_ERROR = \"APP/FETCH_LOCAL_USER_ERROR \";\n","import Login from \"./Login\";\nexport default Login;\n","import ForgetPass from \"./ForgetPass\";\nexport default ForgetPass;\n","import React from \"react\";\n\nconst ForgetPass = () => {\n  return <div>this is forget pass</div>;\n};\n\nexport default ForgetPass;\n","import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Select,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { setUser } from \"../../../redux/actions\";\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Register = ({ setUser }) => {\n  const [form] = Form.useForm();\n  let history = useHistory();\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    setUser(\n      values.email,\n      values.nickname,\n      values.password,\n      values.phone,\n      values.prefix,\n      values.webiste\n    );\n    history.push(\"/login\");\n  };\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"84\">+84</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    </Form.Item>\n  );\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onWebsiteChange = (value) => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(\n        [\".com\", \".org\", \".net\"].map((domain) => `${value}${domain}`)\n      );\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map((website) => ({\n    label: website,\n    value: website,\n  }));\n  return (\n    <div className=\"register-page-wrapper\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          prefix: \"84\",\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\",\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  \"The two passwords that you entered do not match!\"\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"nickname\"\n          label={\n            <span>\n              Nickname&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                <QuestionCircleOutlined />\n              </Tooltip>\n            </span>\n          }\n          rules={[\n            {\n              required: true,\n              message: \"Please input your nickname!\",\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"phone\"\n          label=\"Phone Number\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input your phone number!\",\n            },\n          ]}\n        >\n          <Input\n            addonBefore={prefixSelector}\n            style={{\n              width: \"100%\",\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"website\"\n          label=\"Website\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input website!\",\n            },\n          ]}\n        >\n          <AutoComplete\n            options={websiteOptions}\n            onChange={onWebsiteChange}\n            placeholder=\"website\"\n          >\n            <Input />\n          </AutoComplete>\n        </Form.Item>\n\n        <Form.Item\n          name=\"agreement\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              validator: (_, value) =>\n                value\n                  ? Promise.resolve()\n                  : Promise.reject(\"Should accept agreement\"),\n            },\n          ]}\n          {...tailFormItemLayout}\n        >\n          <Checkbox>\n            I have read the <Link to=\"#\">agreement</Link>\n          </Checkbox>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    appReducers: { users },\n  } = state;\n  return {\n    users,\n  };\n};\nconst mapDispatchToProps = {\n  setUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import Register from \"./Register\";\nexport default Register;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport DefaultLayout from \"./containers/DefaultLayout\";\nimport Login from \"./Views/Pages/Login\";\nimport ForgotPassword from \"./Views/Pages/ForgetPass\";\nimport Register from \"./Views/Pages/Register\";\n\nfunction App() {\n  const loading = () => (\n    <div className=\"ant-divider-with-text-center\">Loading....</div>\n  );\n\n  const fakeAuth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n      fakeAuth.isAuthenticated = true;\n      setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n      fakeAuth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    },\n  };\n\n  return (\n    <HashRouter>\n      <React.Suspense fallback={loading()}>\n        <Switch>\n          <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n          <Route\n            exact\n            path=\"/register-page\"\n            name=\"Register Page\"\n            component={Register}\n          />\n          <Route\n            exact\n            path=\"/forgot-password\"\n            name=\"Forgot pass Page\"\n            component={ForgotPassword}\n          />\n          {/* <PrivateRoute path=\"/\" name=\"Home\" component={DefaultLayout} /> */}\n          <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SET_USER,\n  CHECK_USER,\n  FETCH_LOCAL_USER_START,\n  FETCH_LOCAL_USER_SUCCESS,\n  FETCH_LOCAL_USER_ERROR,\n} from \"./types\";\nconst initialState = {\n  visibleUsersRedux: [],\n  initUsersRedux: [],\n  loading: false,\n  error: false,\n  keywords: \"\",\n  users: [\n    {\n      id: 1,\n      email: \"test@gmail.com\",\n      username: \"1\",\n      password: \"1\",\n      phone: 1,\n      prefix: \"84\",\n      website: \"\",\n    },\n  ],\n  matchData: false,\n  user: {},\n};\n\n// let newObjectUser = {};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER: {\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    }\n    // ----------------------------------------------------------------\n    case FETCH_LOCAL_USER_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_LOCAL_USER_SUCCESS: {\n      return {\n        ...state,\n        users: [...state, action.payload],\n      };\n    }\n    case FETCH_LOCAL_USER_ERROR: {\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    }\n    // ----------------------------------------------------------------\n    // BEGIN NEED TO HELP\n    case CHECK_USER: {\n      const { username, password } = action.payload.values; //gia tri trả về từ input\n      console.log(\"OUTPUT: reducers -> password\", password);\n      console.log(\"OUTPUT: reducers -> username\", username);\n      console.log(\"OUTPUT: reducers -> Users\", state.users); //(gia tri tra ve tu localstorage)\n      return {\n        ...state,\n        user: state.users.map(\n          (user) => user.username === username && user.password === password\n        ),\n      };\n    }\n    // END\n    default:\n      return state;\n  }\n};\nexport default reducers;\n","import {\n  FETCH_USER_START,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  REMOVE_USER,\n  // SEARCH_USER,\n  USER_DETAIL,\n  REMOVE_ALL,\n} from \"./types\";\nconst initialState = {\n  visibleUsersRedux: [],\n  initUsersRedux: [],\n  loading: false,\n  error: false,\n  keywords: \"\",\n  user: {},\n};\n\nconst Userreducers = (state = initialState, action) => {\n  switch (action.type) {\n    //------------------------------------------------------------\n    case FETCH_USER_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        visibleUsersRedux: action.payload.data,\n        initUsersRedux: action.payload.data,\n        loading: false,\n      };\n    }\n    case FETCH_USER_ERROR: {\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    }\n\n    //------------------------------------------------------------\n    case USER_DETAIL: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n    // ----------------------------------------------------------------\n    case REMOVE_USER: {\n      const { email } = action.payload.user;\n      const newUsers = state.visibleUsersRedux.filter(\n        (user) => user.email !== email\n      );\n\n      // array find, findIndex, filter, indexOf, map, reducer\n\n      return {\n        ...state,\n        visibleUsersRedux: newUsers,\n      };\n    }\n\n    case REMOVE_ALL: {\n      console.log(action.payload.users);\n      return {\n        ...state,\n        // visibleUsersRedux: ...\n      };\n    }\n\n    default:\n      return state;\n  }\n};\nexport default Userreducers;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n// import reducers\nimport appReducers from \"./redux/reducers\";\nimport userReducers from './Views/Pages/Users/redux/reducers';\n\n// config persist\nconst persisConfig = {\n  key: \"root\",\n  storage,\n};\n\n// config reducers\n\nconst allReducers = {\n  appReducers,\n  userReducers\n};\n\nconst reducers = combineReducers({\n  ...allReducers,\n});\nconst persistedReducer = persistReducer(persisConfig, reducers);\n\nlet stores = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nlet persistor = persistStore(stores);\nexport { stores, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./scss/style.scss\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { stores, persistor } from \"./stores\";\n\nReactDOM.render(\n  <Provider store={stores}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}