{"version":3,"sources":["Views/Dashboard/index.js","Views/Dashboard/Dashboard.js","Views/Pages/Profile/index.js","Views/Pages/Profile/Profile.js","Views/Pages/ResetPass/index.js","Views/Pages/ResetPass/ResetPass.js","Views/Pages/Infor/index.js","Views/Pages/Infor/Infor.js","Views/Pages/DetailUser/index.js","Views/Pages/DetailUser/DetailUser.js","Views/Pages/Settings/index.js","Views/Pages/Settings/Settings.js","configs/url.js","server/api.js","Views/Pages/Users/Users.js","Views/Pages/Users/redux/actions.js","Views/Pages/Users/redux/types.js","routes.js","Views/Pages/Users/index.js","Views/Pages/ChangePass/ChangePass.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/DefaultFooter.js","containers/DefaultLayout/DefaultSideBar.js","containers/DefaultLayout/DefaultLayout.js","containers/DefaultLayout/index.js","Views/Pages/Login/Login.js","redux/actions.js","redux/types.js","Views/Pages/Login/index.js","Views/Pages/ForgetPass/index.js","Views/Pages/ForgetPass/ForgetPass.js","Views/Pages/Register/Register.js","Views/Pages/Register/index.js","App.js","serviceWorker.js","redux/reducers.js","Views/Pages/Users/redux/reducers.js","stores.js","index.js"],"names":["Dashboard","Profile","connect","state","account","appReducers","console","log","Description","username","email","password","prefix","phone","website","title","layout","bordered","Item","label","style","className","span","offset","ResetPass","Infor","DetailUser","user","userReducers","useState","dataUser","setDataUser","useEffect","userpass","cell","gender","login","location","country","city","street","number","name","dob","age","date","registered","id","value","DetailAvatar","size","src","picture","large","first","last","Object","keys","length","Settings","url","DASHBOARD","INFO","FOOD","SETTINGS","USERS","USERS_DETAIL","PROFILE","CHANGE_PASSWORD","apiFetchUsers","a","data","getLocalUsers","readDataLocalStorage","JSON","parse","window","localStorage","getItem","localUsers","users","confirm","Modal","mapDispatchToProps","detailUser","type","payload","fetchUsers","dispatch","api","res","results","removeUser","removeAll","loading","error","initUsersRedux","visibleUsersRedux","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","records","setRecords","history","useHistory","rowSelection","onChange","onSelect","record","selected","newEmails","push","onSelectAll","changeRows","handleDelete","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","handleViewDetail","URL_PAGE","columns","dataIndex","render","thumbnail","alt","width","fixed","key","marginRight","onClick","danger","marginBottom","dataSource","rowKey","uuid","scroll","x","y","pagination","pageSize","routes","path","exact","component","Users","Information","authority","RESETPASSWORD","ResetPassword","Header","Layout","_handleLogOut","menu","to","Divider","padding","textAlign","overlay","trigger","right","DefaultFooter","Sider","SubMenu","Menu","DefaultSideBar","setState","collapsible","collapsed","onCollapse","color","theme","defaultSelectedKeys","mode","PieChartOutlined","UserOutlined","TeamOutlined","FileOutlined","Content","Footer","DefaultLayout","hash","string","node","breadcumbLabel","split","charAt","toUpperCase","slice","minHeight","margin","map","route","idx","from","labelCol","wrapperCol","tailLayout","fetchLocalUsers","activeUser","Login","errorMatchData","setErrorMatchData","initialValues","remember","onFinish","values","accounts","filter","onFinishFailed","errorInfo","rules","required","message","Password","valuePropName","htmlType","ForgetPass","Option","Select","formItemLayout","xs","sm","tailFormItemLayout","setUser","uuidv4","Register","Form","useForm","form","prefixSelector","noStyle","autoCompleteResult","setAutoCompleteResult","websiteOptions","nickname","webiste","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","QuestionCircleOutlined","whitespace","addonBefore","options","domain","placeholder","_","App","Suspense","fallback","ForgotPassword","Boolean","hostname","match","initialState","keywords","reducers","action","Userreducers","newUsers","persisConfig","storage","allReducers","combineReducers","persistedReducer","persistReducer","stores","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3280487f.chunk.js","sourcesContent":["import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import React from \"react\";\n// import Users from \"../Pages/Users\";\nconst Dashboard = () => {\n  return (\n    <div>\n      <h1>this is dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import Profile from \"./Profile\";\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Descriptions, Row, Col } from \"antd\";\n\nconst Profile = ({ account }) => {\n  // const [dataUser, setDataUser] = useState({});\n  console.log(account);\n\n  const Description = () => {\n    const { username, email, password, prefix, phone, website } = account;\n    return (\n      <>\n        <Descriptions title=\"User Info\" layout=\"vertical\" bordered>\n          <Descriptions.Item label=\"Contact\" style={{}}>\n            {username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Email\">{email}</Descriptions.Item>\n          <Descriptions.Item label=\"Gender\">{password}</Descriptions.Item>\n\n          <Descriptions.Item label=\"Prefix\">{prefix}</Descriptions.Item>\n          <Descriptions.Item label=\"Phone\">{phone}</Descriptions.Item>\n          <Descriptions.Item label=\"website\">{website}</Descriptions.Item>\n        </Descriptions>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"detaul_userdetaul_user\">\n      <>\n        <Row>\n          <Col span={12} offset={6} className=\"ant-col-profile\">\n            <p>this is avatar place</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={12} offset={6}>\n            <Description />\n          </Col>\n        </Row>\n      </>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { account } = state.appReducers;\n  return {\n    account,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Profile);\n","import ResetPass from \"./ResetPass\";\n\nexport default ResetPass;\n","import React from \"react\";\n\nconst ResetPass = () => {\n  return <div>Reset Pass</div>;\n};\n\nexport default ResetPass;\n","import Infor from \"./Infor\";\nexport default Infor;\n","import React from \"react\";\n\nconst Infor = () => {\n  return <div>Information page tai saooo???</div>;\n};\n\nexport default Infor;\n","import DetailUser from'./DetailUser'\n\nexport default DetailUser;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Descriptions, Row, Col, Card, Avatar } from \"antd\";\n\nconst DetailUser = ({ user }) => {\n  const [dataUser, setDataUser] = useState({});\n\n  useEffect(() => {\n    setDataUser(user.userpass);\n  }, [user.userpass]);\n  console.log(dataUser);\n  const Description = () => {\n    return (\n      <>\n        <Descriptions title=\"User Info\" layout=\"vertical\" bordered>\n          <Descriptions.Item label=\"Contact\" style={{}}>\n            {dataUser.cell}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Email\">{dataUser.email}</Descriptions.Item>\n          <Descriptions.Item label=\"Gender\">\n            {dataUser.gender}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"User name\">\n            {dataUser.login.username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Location\" span={2}>\n            {dataUser.location.country}, {dataUser.location.city},{\" \"}\n            {dataUser.location.street.number}, {dataUser.location.street.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Age\">\n            {dataUser.dob.age}, {dataUser.dob.date}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Registered Date\" span={2}>\n            {dataUser.registered.date}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"ID\">\n            {dataUser.id.name || \"hidden\"} {dataUser.id.value || \"\"}\n          </Descriptions.Item>\n        </Descriptions>\n      </>\n    );\n  };\n\n  const DetailAvatar = () => {\n    return (\n      <>\n        <Card>\n          <div className=\"profile__avatar\">\n            <Avatar size={130} src={dataUser.picture.large} />\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__info__regency\">{dataUser.name.title}</div>\n            <div className=\"profile__info__name\">\n              {dataUser.name.first}. {dataUser.name.last}\n            </div>\n            <div className=\"profile__info__bio\">\n              We don&lsquo;t be scared of the truth because we need to restart\n              the human foundation in truth And I love you like Kanye loves\n              Kanye I love Rick Owens’ bed design.\n            </div>\n          </div>\n        </Card>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"detaul_userdetaul_user\">\n      {Object.keys(dataUser).length > 0 ? (\n        <>\n          <Row>\n            <Col span={12} offset={6} className=\"ant-col-profile\">\n              <DetailAvatar />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12} offset={6}>\n              <Description />\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <div>loading</div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { user } = state.userReducers;\n\n  return {\n    user,\n  };\n};\n\nexport default connect(mapStateToProps, null)(DetailUser);\n","import Settings from './Settings'\nexport default Settings;","import React from 'react';\n\nconst Settings = () => {\n  return (\n    <div>\n      this is Setting page\n    </div>\n  );\n}\n\nexport default Settings;\n","const url = {\n  DASHBOARD: \"/dashboard\",\n  INFO: \"/information\",\n  FOOD: \"/food\",\n  SETTINGS: \"/settings\",\n  USERS: \"/users\",\n  USERS_DETAIL: \"/user-detail\",\n  PROFILE: \"/profile\",\n  CHANGE_PASSWORD: \"/change-password\",\n};\n\nexport default url;\n","import data from \"../db.json\";\n\nexport const apiFetchUsers = async () => {\n  // return axios.get(\"http://localhost:4000/results\");\n  return data;\n};\n\nexport const getLocalUsers = async () => {\n  const readDataLocalStorage = JSON.parse(\n    window.localStorage.getItem(\"persist:root\")\n  );\n  if (Object.keys(readDataLocalStorage).length > 0) {\n    const localUsers = JSON.parse(readDataLocalStorage.appReducers).users\n      ? JSON.parse(readDataLocalStorage.appReducers).users\n      : {};\n    return localUsers;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table, Button, Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport URL_PAGE from \"../../../configs/url\";\nimport { connect } from \"react-redux\";\nimport { detailUser, fetchUsers, removeUser, removeAll } from \"./redux/actions\";\nconst { confirm } = Modal;\n\nconst Users = ({\n  detailUser,\n  visibleUsersRedux,\n  fetchUsers,\n  removeUser,\n  removeAll,\n}) => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState(\"\");\n  const [selectedRows, setSelectedRows] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  let history = useHistory();\n  // rowSelection objects indicates the need for row selection\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRowKeys(selectedRowKeys);\n      setSelectedRows(selectedRows);\n      \n    },\n    onSelect: (record, selected, selectedRows) => {\n      const newEmails = [];\n      for (const value of selectedRows) {\n        newEmails.push(value.email);\n      }\n      setRecords(newEmails);\n    },\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      const newEmails = [];\n      for (const value of selectedRows) {\n        newEmails.push(value.email);\n      }\n      setRecords(newEmails);\n    },\n  };\n  console.log(selectedRowKeys, selectedRows)\n  const _handleDeleteAll = () => {\n    confirm({\n      title: \"Are you sure delete All tasks?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Some descriptions\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        removeAll(records);\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  const handleDelete = (record) => () => {\n    confirm({\n      title: \"Are you sure delete the task?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Some descriptions\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        removeUser(record);\n        console.log(\"deleted\");\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const handleViewDetail = (record) => () => {\n    detailUser(record);\n    history.push(URL_PAGE.USERS_DETAIL);\n  };\n\n  const columns = [\n    {\n      title: \"Avatar\",\n      dataIndex: \"picture\",\n      render: (picture) => (\n        <img src={picture.thumbnail} title=\"Avatar\" alt=\"Avatar\" />\n      ),\n      width: \"5%\",\n      fixed: \"left\",\n    },\n    {\n      title: \"Full Name\",\n      width: \"15%\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (name) => `${name.title}. ${name.first} ${name.last}`,\n      fixed: \"left\",\n    },\n    {\n      title: \"Email\",\n      width: \"15%\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"gender\",\n      dataIndex: \"gender\",\n      key: \"1\",\n      width: \"10\",\n    },\n\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      render: (record) => {\n        return (\n          <div className=\"table__action\">\n            <Button\n              type=\"primary\"\n              className=\"btn-success\"\n              style={{ marginRight: 16 }}\n              onClick={handleViewDetail(record)}\n            >\n              View\n            </Button>\n            <Button type=\"primary\" danger onClick={handleDelete(record)}>\n              Delete\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        danger\n        onClick={() => {\n          _handleDeleteAll();\n        }}\n        style={{ marginBottom: 16 }}\n      >\n        Delete Seleted Item\n      </Button>\n      <Table\n        columns={columns}\n        dataSource={visibleUsersRedux}\n        rowKey={(record) => record.login.uuid}\n        scroll={{ x: 1500, y: 300 }}\n        pagination={{ pageSize: 5 }}\n        rowSelection={rowSelection}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    userReducers: {\n      user,\n      loading,\n      error,\n      data,\n      initUsersRedux,\n      visibleUsersRedux,\n    },\n  } = state;\n  return {\n    user,\n    loading,\n    error,\n    data,\n    initUsersRedux,\n    visibleUsersRedux,\n  };\n};\n\nconst mapDispatchToProps = {\n  detailUser,\n  fetchUsers,\n  removeUser,\n  removeAll,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","import {\n  REMOVE_USER,\n  FETCH_USER_START,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  // SEARCH_USER,\n  USER_DETAIL,\n  REMOVE_ALL,\n} from \"./types\";\nimport * as api from \"../../../../server/api\";\n\nexport const fetchUsers = () => async (dispatch) => {\n  dispatch({\n    type: FETCH_USER_START,\n  });\n  try {\n    const res = await api.apiFetchUsers();\n\n    const data = res.results;\n    dispatch({\n      type: FETCH_USER_SUCCESS,\n      payload: { data },\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_USER_ERROR,\n    });\n  }\n};\n\nexport const detailUser = (userpass) => ({\n  type: USER_DETAIL,\n  payload: {\n    userpass,\n  },\n});\n\nexport const removeUser = (user) => ({\n  type: REMOVE_USER,\n  payload: {\n    user,\n  },\n});\n\nexport const removeAll = (users) => ({\n  type: REMOVE_ALL,\n  payload: {\n    users,\n  },\n});\n","export const REMOVE_USER = \"USER/REMOVE_USER\";\n\n// pass obj from users to user detail\n\nexport const USER_DETAIL = \"USER/USER_DETAIL\";\n\n// Fetch User from Api\nexport const FETCH_USER_START = \"USER/FETCH_USER_START\";\nexport const FETCH_USER_SUCCESS = \"USER/FETCH_USER_SUCCESS\";\nexport const FETCH_USER_ERROR = \"USER/FETCH_USER_ERROR\";\n\n// Search Users from Api\nexport const SEARCH_USER = \"SEARCH_USER\";\n\nexport const REMOVE_ALL = \"USER/REMOVE_ALL\";","import Dashboard from \"./Views/Dashboard\";\nimport Profile from \"./Views/Pages/Profile\";\nimport ResetPassword from \"./Views/Pages/ResetPass\";\nimport Information from \"./Views/Pages/Infor\";\nimport DetailUser from \"./Views/Pages/DetailUser\";\nimport Settings from \"./Views/Pages/Settings\";\nimport Users from \"./Views/Pages/Users\";\nimport ChangePass from \"./Views/Pages/ChangePass\";\n\n// configs\nimport { URL_PAGE } from \"./configs\";\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Dashboard\", component: Dashboard },\n  {\n    path: URL_PAGE.DASHBOARD,\n    name: \"Dashboard\",\n    component: Dashboard,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.USERS,\n    name: \"User List\",\n    component: Users,\n  },\n  {\n    path: URL_PAGE.CHANGE_PASSWORD,\n    name: \"Change Password\",\n    component: ChangePass,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.INFO,\n    name: \"About Project\",\n    component: Information,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.SETTINGS,\n    name: \"Settings\",\n    component: Settings,\n    exact: true,\n  },\n\n  {\n    path: URL_PAGE.PROFILE,\n    name: \"profile\",\n    component: Profile,\n    exact: true,\n    authority: [\"users\"],\n  },\n  {\n    path: URL_PAGE.USERS_DETAIL,\n    name: \"Detail User\",\n    component: DetailUser,\n    exact: true,\n  },\n  {\n    path: URL_PAGE.RESETPASSWORD,\n    name: \"Reset Your Password\",\n    component: ResetPassword,\n    exact: true,\n  },\n];\nexport default routes;\n","import Users from \"./Users\"\nexport default Users;","import React from \"react\";\n\nconst ChangePass = () => {\n  return <div>this is Change Pass Page</div>;\n};\n\nexport default ChangePass;\n","import React from \"react\";\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { URL_PAGE } from \"../../configs\";\nimport { connect } from \"react-redux\";\nconst { Header } = Layout;\n\nconst DefaultHeader = ({ account }) => {\n  const _handleLogOut = () => {};\n  console.log(account);\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <span>Hello {account.username}</span>\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <Link to={URL_PAGE.PROFILE}>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to={URL_PAGE.CHANGE_PASSWORD}>Change Password</Link>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"3\">\n        <Link to={\"/login\"} onClick={() => _handleLogOut}>\n          Logout\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n      <div className=\"avatar-wrapper\" style={{ padding: 0, textAlign: \"right\" }}>\n        <Dropdown overlay={menu} trigger={[\"click\"]}>\n          <Avatar size=\"large\" src=\"https://bit.ly/34SWeiX\" style={{ right: \"20px\" }} />\n        </Dropdown>\n      </div>\n    </Header>\n  );\n};\nconst mapStateToProps = (state) => {\n  console.log(state);\n  const { account } = state.appReducers;\n  console.log(account);\n  return {\n    account,\n  };\n};\nexport default connect(mapStateToProps, null)(DefaultHeader);\n","import React from \"react\";\n\nconst DefaultFooter = () => {\n  return <> Ant Design ©2018 Created by Ant UED</>;\n};\n\nexport default DefaultFooter;\n","import React, { useState } from \"react\";\nimport {\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { URL_PAGE } from \"../../configs\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\nconst DefaultSideBar = () => {\n  const [state, setState] = useState(false);\n\n  const onCollapse = (collapsed) => {\n    console.log(collapsed);\n    setState({ collapsed });\n  };\n\n  return (\n    <Sider collapsible collapsed={state.collapsed} onCollapse={onCollapse}>\n      <div className=\"logo\" style={{ color: \"white\", textAlign: \"center\" }}>\n        Viet Anh le\n      </div>\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <Menu.Item key=\"1\">\n          <Link to={URL_PAGE.DASHBOARD}>\n            <PieChartOutlined />\n            <span>Dashboard</span>\n          </Link>\n        </Menu.Item>\n\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <UserOutlined />\n              <span>Management</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"3\">\n            <Link to={URL_PAGE.USERS}>\n              <span>User List</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <TeamOutlined />\n              <span>Team</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"6\">Team 1</Menu.Item>\n          <Menu.Item key=\"8\">Team 2</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"9\">\n          <FileOutlined />\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n};\n\nexport default DefaultSideBar;\n","import React, { Suspense } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Breadcrumb } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport last from \"lodash/last\";\nimport DefaultHeader from \"./DefaultHeader\";\nimport DefaultFooter from \"./DefaultFooter\";\nimport DefaultSideBar from \"./DefaultSideBar\";\nimport { connect } from \"react-redux\";\nconst { Content, Footer } = Layout;\n\nconst DefaultLayout = ({ account }) => {\n  const location = window.location.hash;\n\n  const getNodeLabel = (node) => last(node.split(\"/\"));\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  const breadcumbLabel = capitalizeFirstLetter(getNodeLabel(location));\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <DefaultSideBar />\n      <Layout className=\"site-layout\">\n        <Suspense>\n          <DefaultHeader />\n        </Suspense>\n        <Suspense>\n          <Content style={{ margin: \"0 16px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>{breadcumbLabel}</Breadcrumb.Item>\n              <Breadcrumb.Item>Child-Page</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"container\">\n              <Switch>\n                {routes.map((route, idx) => {\n                  return route.name === \"profile\" ? (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      component={route.component}\n                    />\n                  ) : (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      component={route.component}\n                    />\n                  );\n                })}\n                <Redirect from=\"/\" to=\"/dashboard\" />\n              </Switch>\n            </div>\n          </Content>\n        </Suspense>\n        <Suspense>\n          <Footer style={{ textAlign: \"center\" }}>\n            <DefaultFooter />\n          </Footer>\n        </Suspense>\n      </Layout>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { account } = state.appReducers;\n  return {\n    account,\n  };\n};\nexport default connect(mapStateToProps, null)(DefaultLayout);\n","import DefaultLayout from \"./DefaultLayout\";\nexport default DefaultLayout;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { fetchLocalUsers, activeUser } from \"../../../redux/actions\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Login = ({ fetchLocalUsers, activeUser, user, error, users }) => {\n  const [errorMatchData, setErrorMatchData] = useState(\"\");\n  let history = useHistory();\n\n  const onFinish = (values) => {\n    if (users.length > 0) {\n      // users.map((user) =>\n      //   user.username === values.username && user.password === values.password\n      //     ? (history.push(\"/\"), setErrorMatchData(false), activeUser(user))\n      //     : (console.log(\"data not match\"), setErrorMatchData(true))\n      // );\n      const accounts = users.filter((user) => user.username === values.username);\n\n      if (accounts.length > 0) {\n        setErrorMatchData(false);\n        activeUser(accounts[0]);\n        history.push(\"/\");\n      } else {\n        setErrorMatchData(true);\n      }\n    } else {\n      console.log(\"nothing to show\");\n    }\n    //end NEED TO HELP\n  };\n  useEffect(() => {\n    fetchLocalUsers();\n  }, [fetchLocalUsers]);\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout className=\"login-page-wrapper\">\n      <Form\n        className=\"login-form\"\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item {...tailLayout}>\n          <p>1</p>\n          <p>1</p>\n        </Form.Item>\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n        {errorMatchData && <p className=\"error\">not match data</p>}\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Link to=\"/register-page\" type=\"primary\" className=\"ant-btn ant-btn-primary\">\n            Register Now !\n          </Link>\n        </Form.Item>\n      </Form>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    appReducers: { users, error },\n  } = state;\n  return {\n    users,\n    error,\n  };\n};\nconst mapDispatchToProps = {\n  fetchLocalUsers,\n  activeUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\n// export default Login;\n","import { v4 as uuidv4 } from \"uuid\";\nimport * as api from \"../server/api\";\nimport { SET_USER, USER_ACTIVE, FETCH_LOCAL_USER_START, FETCH_LOCAL_USER_SUCCESS, FETCH_LOCAL_USER_ERROR } from \"./types\";\n// ----------------------------------------------------------------\nexport const setUser = (email, username, password, phone, prefix, website) => ({\n  type: SET_USER,\n  payload: {\n    id: uuidv4(),\n    email,\n    username,\n    password,\n    phone,\n    prefix,\n    website,\n  },\n});\n// ---------------------------------------------------------------\nexport const fetchLocalUsers = () => async (dispatch) => {\n  dispatch({\n    type: FETCH_LOCAL_USER_START,\n  });\n  try {\n    const res = await api.getLocalUsers();\n    dispatch({\n      type: FETCH_LOCAL_USER_SUCCESS,\n      payload: { res },\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_LOCAL_USER_ERROR,\n    });\n  }\n};\n// ----------------------------------------------------------------\nexport const activeUser = (payload) => ({\n  type: USER_ACTIVE,\n  payload,\n});\n","export const SET_USER = \"APP/SET_USER\"; //save user when login to local store by redux persist\n\nexport const USER_ACTIVE = \"APP/USER_ACTIVE\";\n\nexport const FETCH_LOCAL_USER_START = \"APP/FETCH_LOCAL_USER_START\";\nexport const FETCH_LOCAL_USER_SUCCESS = \"APP/FETCH_LOCAL_USER_SUCCESS\";\nexport const FETCH_LOCAL_USER_ERROR = \"APP/FETCH_LOCAL_USER_ERROR \";\n","import Login from \"./Login\";\nexport default Login;\n","import ForgetPass from \"./ForgetPass\";\nexport default ForgetPass;\n","import React from \"react\";\n\nconst ForgetPass = () => {\n  return <div>this is forget pass</div>;\n};\n\nexport default ForgetPass;\n","import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Select,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { setUser } from \"../../../redux/actions\";\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Register = ({ setUser }) => {\n  const [form] = Form.useForm();\n  let history = useHistory();\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    setUser(\n      values.email,\n      values.nickname,\n      values.password,\n      values.phone,\n      values.prefix,\n      values.webiste\n    );\n    history.push(\"/login\");\n  };\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"84\">+84</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    </Form.Item>\n  );\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onWebsiteChange = (value) => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(\n        [\".com\", \".org\", \".net\"].map((domain) => `${value}${domain}`)\n      );\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map((website) => ({\n    label: website,\n    value: website,\n  }));\n  return (\n    <div className=\"register-page-wrapper\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          prefix: \"84\",\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\",\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  \"The two passwords that you entered do not match!\"\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"nickname\"\n          label={\n            <span>\n              Nickname&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                <QuestionCircleOutlined />\n              </Tooltip>\n            </span>\n          }\n          rules={[\n            {\n              required: true,\n              message: \"Please input your nickname!\",\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"phone\"\n          label=\"Phone Number\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input your phone number!\",\n            },\n          ]}\n        >\n          <Input\n            addonBefore={prefixSelector}\n            style={{\n              width: \"100%\",\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"website\"\n          label=\"Website\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input website!\",\n            },\n          ]}\n        >\n          <AutoComplete\n            options={websiteOptions}\n            onChange={onWebsiteChange}\n            placeholder=\"website\"\n          >\n            <Input />\n          </AutoComplete>\n        </Form.Item>\n\n        <Form.Item\n          name=\"agreement\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              validator: (_, value) =>\n                value\n                  ? Promise.resolve()\n                  : Promise.reject(\"Should accept agreement\"),\n            },\n          ]}\n          {...tailFormItemLayout}\n        >\n          <Checkbox>\n            I have read the <Link to=\"#\">agreement</Link>\n          </Checkbox>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    appReducers: { users },\n  } = state;\n  return {\n    users,\n  };\n};\nconst mapDispatchToProps = {\n  setUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import Register from \"./Register\";\nexport default Register;\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport DefaultLayout from \"./containers/DefaultLayout\";\nimport Login from \"./Views/Pages/Login\";\nimport ForgotPassword from \"./Views/Pages/ForgetPass\";\nimport Register from \"./Views/Pages/Register\";\n\nimport { isLogin } from \"./utils\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  console.log(isLogin());\n  return <Route {...rest} render={(props) => (isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\n};\n\nfunction App() {\n  const loading = () => <div className=\"ant-divider-with-text-center\">Loading....</div>;\n\n  return (\n    <HashRouter>\n      <React.Suspense fallback={loading()}>\n        <Switch>\n          <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n          <Route exact path=\"/register-page\" name=\"Register Page\" component={Register} />\n          <Route exact path=\"/forgot-password\" name=\"Forgot pass Page\" component={ForgotPassword} />\n          <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n          {/* <PrivateRoute path=\"/\" name=\"Home\" component={DefaultLayout} /> */}\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_USER, USER_ACTIVE, FETCH_LOCAL_USER_START, FETCH_LOCAL_USER_SUCCESS, FETCH_LOCAL_USER_ERROR } from \"./types\";\nconst initialState = {\n  visibleUsersRedux: [],\n  initUsersRedux: [],\n  loading: false,\n  error: false,\n  keywords: \"\",\n  users: [\n    {\n      id: 1,\n      email: \"test@gmail.com\",\n      username: \"1\",\n      password: \"1\",\n      phone: 1,\n      prefix: \"84\",\n      website: \"\",\n    },\n  ],\n  user: {},\n  account: {},\n};\n\n// let newObjectUser = {};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER: {\n      console.log(\"====set user=====\", action.payload);\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    }\n    // ----------------------------------------------------------------\n    case FETCH_LOCAL_USER_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_LOCAL_USER_SUCCESS: {\n      return {\n        ...state,\n        users: [...state, action.payload],\n      };\n    }\n    case FETCH_LOCAL_USER_ERROR: {\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    }\n    // ----------------------------------------------------------------\n    // BEGIN NEED TO HELP\n    case USER_ACTIVE: {\n      return {\n        ...state,\n        account: action.payload,\n      };\n    }\n    // END\n    default:\n      return state;\n  }\n};\nexport default reducers;\n","import {\n  FETCH_USER_START,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  REMOVE_USER,\n  // SEARCH_USER,\n  USER_DETAIL,\n  REMOVE_ALL,\n} from \"./types\";\nconst initialState = {\n  visibleUsersRedux: [],\n  initUsersRedux: [],\n  loading: false,\n  error: false,\n  keywords: \"\",\n  user: {},\n};\n\nconst Userreducers = (state = initialState, action) => {\n  switch (action.type) {\n    //------------------------------------------------------------\n    case FETCH_USER_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_USER_SUCCESS: {\n      return {\n        ...state,\n        visibleUsersRedux: action.payload.data,\n        initUsersRedux: action.payload.data,\n        loading: false,\n      };\n    }\n    case FETCH_USER_ERROR: {\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    }\n\n    //------------------------------------------------------------\n    case USER_DETAIL: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n    // ----------------------------------------------------------------\n    case REMOVE_USER: {\n      const { email } = action.payload.user;\n      const newUsers = state.visibleUsersRedux.filter(\n        (user) => user.email !== email\n      );\n\n      // array find, findIndex, filter, indexOf, map, reducer\n\n      return {\n        ...state,\n        visibleUsersRedux: newUsers,\n      };\n    }\n\n    case REMOVE_ALL: {\n      console.log(action.payload.users);\n      return {\n        ...state,\n        // visibleUsersRedux: ...\n      };\n    }\n\n    default:\n      return state;\n  }\n};\nexport default Userreducers;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n// import reducers\nimport appReducers from \"./redux/reducers\";\nimport userReducers from './Views/Pages/Users/redux/reducers';\n\n// config persist\nconst persisConfig = {\n  key: \"root\",\n  storage,\n};\n\n// config reducers\n\nconst allReducers = {\n  appReducers,\n  userReducers\n};\n\nconst reducers = combineReducers({\n  ...allReducers,\n});\nconst persistedReducer = persistReducer(persisConfig, reducers);\n\nlet stores = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nlet persistor = persistStore(stores);\nexport { stores, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./scss/style.scss\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { stores, persistor } from \"./stores\";\n\nReactDOM.render(\n  <Provider store={stores}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}